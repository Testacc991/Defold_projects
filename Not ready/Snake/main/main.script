
function createfood(isfoodpresent)
	if isfoodpresent == false then
		local food = {x=math.random(1,10),y=math.random(1,10)}
		return food
	end
end

function init(self)
	math.randomseed(os.clock()*100000)
	SNAKE = 4
	EMPTY = 2
	FOOD = 3
	pause = 1
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	--create snake
	snake = {
		{x=1,y=2},
		{x=2,y=2},
		{x=3,y=2},
		{x=4,y=2}
	}
	dir = "r"
	food = createfood(false)
	tilemap.set_tile("#grid", "layer1", food.x, food.y, FOOD)
end
function update(self, dt)
	pause = pause+dt
	if pause>=0.5 then
		head = snake[#snake]
		if dir == "r" then
			table.insert(snake,{x=head.x+1,y=head.y})
		elseif dir == "l" then
			table.insert(snake,{x=head.x-1,y=head.y})
		elseif dir == "u" then
			table.insert(snake,{x=head.x,y=head.y+1})
		elseif dir == "d" then
			table.insert(snake,{x=head.x,y=head.y-1})
		end
		
		for i,v in ipairs(snake)do
			tilemap.set_tile("#grid", "layer1", snake[1].x, snake[1].y, EMPTY)
			tilemap.set_tile("#grid", "layer1", v.x, v.y, SNAKE)
		end
		table.remove(snake,1)
		
		--movesnake
		--table.remove(body,1)
		
		--drawsnake
		
		pause = 0
	end
end


function on_input(self, action_id, action)
	if action_id == hash("up") and action.pressed then
		dir = "u"
	elseif action_id == hash("down") and action.pressed then
		dir = "d"
	elseif action_id == hash("left") and action.pressed then
		dir = "l"
	elseif action_id == hash("right") and action.pressed then
		dir = "r"
	end
end