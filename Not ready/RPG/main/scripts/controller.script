local function show(self,proxy)
	if self.current_proxy then
		msg.post(self.current_proxy,"unload")
		self.current_proxy = nil
	end
	msg.post(proxy, "async_load")
end
function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("#", "show menu")
	self.current_proxy = nil
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show menu") then
		show(self, "#menuproxy")
	elseif message_id == hash("show level") then
		show(self, "#levelproxy")
	elseif message_id == hash("show settings") then
		show(self, "#settingsproxy")
	elseif message_id == hash("proxy_loaded") then
		self.current_proxy = sender
		msg.post(sender, "enable")
	elseif message_id == hash("proxy_unloaded") then
		print("Unloaded", sender)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
